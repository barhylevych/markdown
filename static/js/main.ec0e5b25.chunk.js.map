{"version":3,"sources":["lib/propTypes/index.js","utils/always.js","utils/index.js","components/Selector/index.js","components/MultiRow/index.js","asserts/markdown.ico","asserts/sprite.svg","components/Button/index.js","constants/routes.js","constants/options.js","constants/index.js","pages/Main/SyntaxTypes/helper/propsFormatter.js","pages/Main/SyntaxTypes/helper/rowView.js","pages/Main/SyntaxTypes/helper/index.js","pages/Main/SyntaxTypes/H1/parser.js","pages/Main/SyntaxTypes/H1/index.js","pages/Main/SyntaxTypes/BoldAndItalic/parser.js","pages/Main/SyntaxTypes/BoldAndItalic/index.js","pages/Main/SyntaxTypes/Blockquotes/parser.js","pages/Main/SyntaxTypes/Blockquotes/index.js","pages/Main/SyntaxTypes/List/parser.js","pages/Main/SyntaxTypes/List/index.js","pages/Main/SyntaxTypes/Code/parser.js","pages/Main/SyntaxTypes/Code/index.js","pages/Main/SyntaxTypes/FencedCodeBlock/parser.js","pages/Main/SyntaxTypes/FencedCodeBlock/index.js","pages/Main/SyntaxTypes/HorizontalRule/parser.js","pages/Main/SyntaxTypes/HorizontalRule/index.js","pages/Main/SyntaxTypes/Link/parser.js","pages/Main/SyntaxTypes/Link/index.js","pages/Main/SyntaxTypes/Image/parser.js","pages/Main/SyntaxTypes/Image/index.js","pages/Main/SyntaxTypes/Strikethrough/parser.js","pages/Main/SyntaxTypes/Strikethrough/index.js","pages/Main/SyntaxTypes/TaskList/parser.js","pages/Main/SyntaxTypes/TaskList/index.js","pages/Main/SyntaxTypes/DefinitionList/parser.js","pages/Main/SyntaxTypes/DefinitionList/index.js","pages/Main/SyntaxTypes/Footnote/index.js","pages/Main/SyntaxTypes/Table/index.js","pages/Main/index.js","components/HeadContent/index.js","i18n/en.js","i18n/index.js","components/Textarea/index.js","components/MarkdownPreview/index.js","components/FormatBlock/index.js","components/Overview/index.js","components/Switch/index.js","components/Spacing/index.js","components/IsValidUrl/index.js","components/Checkbox/index.js","components/Footer/index.js","components/index.js","App.js","reportWebVitals.js","index.js"],"names":["oneOfType","pt","string","number","func","array","any","bool","object","frozenArray","Object","freeze","frozenObject","frozenFunc","isString","of","Selector","React","memo","options","always","placeholder","value","name","onChange","useState","closed","setClosed","ref","useRef","outsideClick","useCallback","event","preventDefault","stopPropagation","current","contains","target","useEffect","document","removeEventListener","addEventListener","title","find","optionValue","onChangeHandler","syntheticHTMLEvent","getOption","optionTitle","className","classNames","onClick","optionsList","useMemo","map","prev","disabled","hidden","displayName","MultiRow","fill","center","children","Icon","icon","color","onClickHandler","href","sprite","Button","active","flex","icons","ADD","GARBAGE","FULFILLED","REJECT","HOME","GITHUB","GMAIL","colors","white","parts","h1","boldAndItalic","blockquotes","list","code","fencedCodeBlock","horizontalRule","link","image","strikethrough","taskList","definitionList","footnote","tables","h1Options","Array","_","index","repeat","boldAndItalicOptions","horizontalRules","exampleText","exampleJSON","JSON","stringify","param1","param2","propsFormatter","state","setState","prevState","groupRow","fromComponent","parsedHTML","enableBr","safeSplice","data","start","deleteCount","insert","copy","splice","parser","text","prefix","initialState","ExampleComponent","setstate","paddingVertical","H1","path","description","wrap","italicOption","boldOption","italicAndBoldOption","getButton","option","getOnChangeState","Spacing","BoldAndItalic","Blockquotes","isOrderedList","rows","String","concat","join","getRowInstance","key","Math","round","random","setIsOrderedList","setRows","onReset","onAdd","onDelete","length","paddingHorizontal","rest","proportions","List","Code","FencedCodeBlock","prop","HorizontalRule","window","location","height","setHeight","onMouseUp","calcHeight","getBoundingClientRect","style","IsValidUrl","url","Link","alt","Image","Strikethrough","checked","Checkbox","TaskList","term","rowsList","DefinitionList","Footnote","Tables","Types","Component","routes","Main","HeadContent","pathname","history","collapsed","setCollapsed","locationName","scroll","top","left","behavior","src","push","ENTER_TEXT","en","Textarea","i18n","onMouseDown","md","MarkdownIt","MarkdownPreview","preview","setPreview","preparedData","isArray","filter","i","previewData","render","onCopy","a","navigator","clipboard","writeText","split","item","FormatBlock","marginHorizontal","marginVertical","column","classList","Overview","useHistory","Switch","getProportions","gridTemplateColumns","width","propTypes","PropTypes","validStatus","Boolean","URL","e","isValid","type","Footer","process","rel","Strike","DoubleBr","Head","withRouter","App","component","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ec0e5b25.chunk.js","sourcesContent":["import pt from 'prop-types'\r\n\r\nconst { oneOfType, string, number, func, array, any, bool, object } = pt\r\n\r\nconst stringOrNumber = oneOfType([ string, number ])\r\n\r\nconst ANY_CHILDREN = { children: any }\r\n\r\nconst STATIC_COMPONENT_PROPS = {\r\n\tvalue: stringOrNumber,\r\n\tonClick: func,\r\n\tonChange: func,\r\n\tname: stringOrNumber,\r\n\ttitle: any,\r\n}\r\n\r\nexport {\r\n\tstringOrNumber,\r\n\tnumber,\r\n\tstring,\r\n\toneOfType,\r\n\tfunc,\r\n\tarray,\r\n\tany,\r\n\tbool,\r\n\tobject,\r\n\tANY_CHILDREN,\r\n\tSTATIC_COMPONENT_PROPS,\r\n}\r\n","export const frozenArray = Object.freeze([])\r\nexport const frozenObject = Object.freeze({})\r\nexport const frozenFunc = Object.freeze(() => null)\r\n","import * as always from './always'\r\n\r\nconst isString = (of) => typeof of === 'string'\r\n\r\nexport {\r\n\tisString,\r\n\talways\r\n}\r\n","import React, { useCallback, useMemo, useState, useEffect, useRef } from 'react'\r\nimport classNames from 'classnames'\r\nimport { pt } from '../../lib'\r\nimport { always } from '../../utils'\r\nimport './style.css'\r\n\r\nconst syntheticHTMLEvent = (name, value) => ({ target: { name, value }})\r\n\r\nexport const Selector = React.memo(({\r\n\toptions = always.frozenArray,\r\n\tplaceholder,\r\n\tvalue,\r\n\tname,\r\n\tonChange,\r\n}) => {\r\n\tconst [closed, setClosed] = useState(true)\r\n\tconst ref = useRef(null)\r\n\r\n\tconst toggleOpen = () => setClosed((prev) => !prev)\r\n\r\n\t// ---------------------------------------- outside click handlers -------------------------------------------------------------\r\n\r\n\tconst outsideClick = useCallback((event) => {\r\n\t\tevent.preventDefault()\r\n\t\tevent.stopPropagation()\r\n\t\tif (ref && !ref?.current?.contains(event.target)) {\r\n\t\t\tsetClosed(true)\r\n\t\t}\r\n\t}, [ setClosed ])\r\n\r\n\tuseEffect(() => {\r\n\t\tclosed ? document.removeEventListener('click', outsideClick) : document.addEventListener('click', outsideClick)\r\n\t}, [ closed, outsideClick ])\r\n\r\n\t// ----------------------------------------  option handlers -------------------------------------------------------------------\r\n\r\n\tconst { title } = options.find(({ value: optionValue }) => value === optionValue) ?? {}\r\n\r\n\tconst onChangeHandler = useCallback((optionValue) => {\r\n\t\tsetClosed(true)\r\n\t\tonChange(syntheticHTMLEvent(name, optionValue))\r\n\t},[onChange, name])\r\n\r\n\tconst getOption = useCallback(({value: optionValue, title: optionTitle}) => (\r\n\t\t<li\r\n\t\t\tkey={optionValue}\r\n\t\t\tclassName={classNames(\"dropdown-item\", { 'selected': value === optionValue })}\r\n\t\t\tonClick={() => onChangeHandler(optionValue)}\r\n\t\t>\r\n\t\t\t{optionTitle}\r\n\t\t</li>\r\n\t), [ onChangeHandler, value ])\r\n\r\n\tconst optionsList = useMemo(() => options.map(getOption), [options, getOption])\r\n\r\n\treturn <div className=\"dropdown\" ref={ref}>\r\n\t\t<div className=\"select\" onClick={toggleOpen}>\r\n\t\t\t<input className=\"select-input\" value={title} disabled placeholder={placeholder} />\r\n\t\t\t<i className={classNames('arrow', { 'open': !closed })}/>\r\n\t\t</div>\r\n\t\t<ul className=\"dropdown-menu\" hidden={closed}>\r\n\t\t\t{optionsList}\r\n\t\t</ul>\r\n\t</div>\r\n})\r\n\r\nSelector.displayName='Selector'\r\nSelector.propTypes = {\r\n\toptions: pt.array,\r\n\tplaceholder: pt.stringOrNumber,\r\n\tvalue: pt.func.isRequired,\r\n\tname: pt.func.isRequired,\r\n\tonChange: pt.func.isRequired,\r\n}\r\n","import React from 'react'\r\nimport classNames from 'classnames';\r\nimport { pt }from '../../lib'\r\nimport './style.css'\r\n\r\nexport const MultiRow = ({ fill, center, children }) => {\r\n\treturn <div className={classNames(\r\n\t\t\"section__kind\", {\r\n\t\t\t'section__kind--fill': fill,\r\n\t\t\t'section__kind--center': center\r\n\t\t})}\r\n\t>\r\n\t\t{children}\r\n\t</div>\r\n}\r\n\r\nMultiRow.displayName = 'MultiRow'\r\nMultiRow.propTypes = {\r\n\tfill: pt.bool,\r\n\tcenter: pt.bool,\r\n\tchildren: pt.any,\r\n}\r\n","export default __webpack_public_path__ + \"static/media/markdown.b3af3428.ico\";","export default __webpack_public_path__ + \"static/media/sprite.abd7fbc9.svg\";","import React, { useCallback } from 'react'\r\nimport {pt} from '../../lib'\r\nimport {always} from '../../utils'\r\nimport classNames from 'classnames';\r\nimport sprite from '../../asserts/sprite.svg'\r\nimport './style.css'\r\n\r\nexport const Icon = ({\r\n\ttitle,\r\n\ticon,\r\n\tname,\r\n\tvalue,\r\n\tcolor,\r\n\tonClick = always.frozenFunc,\r\n}) => {\r\n\r\n\tconst onClickHandler = useCallback(() => {\r\n\t\tonClick({ target: { name, value }})\r\n\t}, [onClick, name, value ])\r\n\r\n\treturn <button onClick={onClickHandler} value={value} name={name} title={title} className={classNames(\"button__icon\", {[`button__color--${color}`]: color})}>\r\n\t\t<svg>\r\n\t\t\t<use href={sprite + `#${icon}`}/>\r\n\t\t</svg>\r\n\t</button>\r\n}\r\n\r\n\r\nexport const Button = ({\r\n\ttitle,\r\n\tactive,\r\n\tflex,\r\n\tname,\r\n\tvalue,\r\n\tonClick = always.frozenFunc,\r\n\thidden,\r\n}) => {\r\n\r\n\tconst onClickHandler = useCallback(() => {\r\n\t\tonClick({ target: { name, value }})\r\n\t}, [onClick, name, value])\r\n\r\n\treturn <button\r\n\t\tonClick={onClickHandler}\r\n\t\tvalue={value}\r\n\t\tname={name}\r\n\t\ttitle={title}\r\n\t\tclassName={classNames({\r\n\t\t\t'button__active': active,\r\n\t\t\t'button__flex--grow': flex,\r\n\t\t})}\r\n\t\thidden={hidden}\r\n\t>\r\n\t\t{title}\r\n\t</button>\r\n}\r\n\r\nButton.displayName = 'Button'\r\nButton.propTypes = {\r\n\ttitle: pt.stringOrNumber,\r\n\ticon: pt.stringOrNumber,\r\n\tactive: pt.bool,\r\n\tflex: pt.bool,\r\n\tname: pt.stringOrNumber,\r\n\tvalue: pt.stringOrNumber,\r\n\tonClick: pt.func,\r\n\tcolor: pt.string,\r\n\thidden: pt.bool,\r\n}\r\nButton.icons = {\r\n\tADD: 'add',\r\n\tGARBAGE: 'garbage',\r\n\tFULFILLED: 'fulfilled',\r\n\tREJECT: 'reject',\r\n\tHOME: 'home',\r\n\tGITHUB: 'github',\r\n\tGMAIL: 'gmail',\r\n}\r\nButton.colors = {\r\n  white: 'white'\r\n}\r\n\r\nIcon.propTypes = Button.propTypes\r\nIcon.displayName = Button.Icon\r\nButton.Icon = Icon\r\n","export const parts = '/parts'\r\nexport const h1 = '/h1'\r\nexport const boldAndItalic = \"/bold_and_italic\"\r\nexport const blockquotes = \"/blockquotes\"\r\nexport const list = \"/list\"\r\nexport const code = \"/code\"\r\nexport const fencedCodeBlock = \"/fenced_code_block\"\r\nexport const horizontalRule = \"/horizontal_rule\"\r\nexport const link = \"/link\"\r\nexport const image = \"/image\"\r\nexport const strikethrough = \"/strikethrough\"\r\nexport const taskList = \"/task_list\"\r\nexport const definitionList = \"/definition_ist\"\r\nexport const footnote = \"/footnote\"\r\nexport const tables = \"/tables\"\r\n","export const h1Options = Array(6).fill().map((_, index) => ({\r\n\ttitle: `Heading level ${++index}`,\r\n\tvalue: '#'.repeat(index)\r\n}))\r\n\r\nexport const boldAndItalicOptions = [\r\n\t{ title: 'Italic', value: '*' },\r\n\t{ title: 'Bold', value: '**' },\r\n\t{ title: 'Bold and Italic', value: '***' }\r\n]\r\n\r\nexport const horizontalRules = [\r\n\t{ title: '***', value: '***' },\r\n\t{ title: '---', value: '---' },\r\n\t{ title: '___', value: '___' }\r\n]\r\n","import * as routes from './routes'\r\nimport { boldAndItalicOptions, h1Options, horizontalRules } from './options';\r\n\r\nexport {\r\n\troutes,\r\n\tboldAndItalicOptions,\r\n\th1Options,\r\n\thorizontalRules,\r\n}\r\n\r\nexport const exampleText = 'Example text'\r\nexport const exampleHTML = '<body class=\"example\"> ...any text </body>'\r\nexport const exampleJSON = JSON.stringify({ param1: 'example 1', param2: 'example 2'})\r\n","\r\nexport const getOnChangeState = (setState) =>\r\n\t({ target: { name, value }}) => setState((prevState) => ({ ...prevState, [name]: value }))\r\n\r\nexport const propsFormatter = (name, state, setState) => {\r\n\treturn {\r\n\t\tvalue: state[name],\r\n\t\tonChange: ({ target: { value }}) => setState((prevState) => ({ ...prevState, [name]: value })),\r\n\t\tname,\r\n\t}\r\n}\r\n\r\nexport const propsFormatterFlat = (state, setState, name) => {\r\n\treturn {\r\n\t\tvalue: state,\r\n\t\tonChange: ({ target: { value }}) => setState(value),\r\n\t\tname,\r\n\t}\r\n}\r\n\r\n","import React from 'react'\r\nimport { MultiRow, MarkdownPreview } from '../../../../components';\r\n\r\nexport const groupRow = (fromComponent, parsedHTML, enableBr) => {\r\n\treturn <MultiRow>\r\n\t\t<div>\r\n\t\t\t{fromComponent}\r\n\t\t</div>\r\n\t\t<div>\r\n\t\t\t<MarkdownPreview enableBr={enableBr}>{parsedHTML}</MarkdownPreview>\r\n\t\t</div>\r\n\t</MultiRow>\r\n}\r\n","import { propsFormatter, getOnChangeState, propsFormatterFlat } from './propsFormatter'\r\nimport { groupRow } from './rowView'\r\n\r\nconst safeSplice = (data, start, deleteCount, insert) => {\r\n\tconst copy = [...data]\r\n\tinsert ? copy.splice(start, deleteCount, insert) : copy.splice(start, deleteCount)\r\n\treturn copy\r\n}\r\n\r\nexport {\r\n\tpropsFormatter,\r\n\tgroupRow,\r\n\tgetOnChangeState,\r\n\tpropsFormatterFlat,\r\n\tsafeSplice,\r\n}\r\n","const parser = ({text, prefix }) => {\r\n\treturn `${prefix} ${text}`\r\n};\r\n\r\nexport default parser\r\n","import React from 'react'\r\nimport { groupRow, propsFormatter } from '../helper';\r\nimport { FormatBlock, Selector, Textarea, Overview, MultiRow, MarkdownPreview, DoubleBr } from '../../../../components';\r\nimport { exampleText, h1Options } from '../../../../constants';\r\nimport parser from './parser';\r\n\r\nconst initialState = {\r\n\tprefix: h1Options[0].value,\r\n\ttext: exampleText,\r\n}\r\n\r\nconst ExampleComponent = () => {\r\n\tconst [state, setstate] = React.useState(initialState)\r\n\r\n\treturn groupRow(<>\r\n\t\t\t<FormatBlock paddingVertical>\r\n\t\t\t\t<Selector options={h1Options} {...propsFormatter('prefix', state, setstate)} />\r\n\t\t\t</FormatBlock>\r\n\t\t\t<FormatBlock paddingVertical>\r\n\t\t\t\t<Textarea {...propsFormatter('text', state, setstate)}/>\r\n\t\t\t</FormatBlock>\r\n\t\t</>,\r\n\t\tparser(state))\r\n}\r\n\r\nexport const H1 = ({ path }) => {\r\n\treturn <Overview\r\n\t\ttext=\"Headings\"\r\n\t\tpath={path}\r\n\t\tdescription={<>\r\n\t\t\tTo create a heading, add number signs (#) in front of a word or phrase. The number of number signs you use should correspond to the heading level. <DoubleBr/>\r\n\t\t\tAlternate you can use: <br/>\r\n\t\t\t<MultiRow center>\r\n\t\t\t\t<MarkdownPreview>\r\n\t\t\t\t\tHeading level 1 <br/>\r\n\t\t\t\t\t===============\r\n\t\t\t\t</MarkdownPreview>\r\n\t\t\t\t<MarkdownPreview>\r\n\t\t\t\t\tHeading level 2 <br/>\r\n\t\t\t\t\t---------------\r\n\t\t\t\t</MarkdownPreview>\r\n\t\t\t</MultiRow>\r\n\t\t</>}\r\n\t>\r\n\t\t<ExampleComponent/>\r\n\t</Overview>\r\n}\r\n\r\nH1.displayName = 'H1'\r\n","const parser = ({text, wrap }) => {\r\n\treturn `${wrap}${text}${wrap}`\r\n};\r\n\r\nexport default parser\r\n","import React, {useCallback, useState} from 'react'\r\nimport { groupRow, propsFormatter, getOnChangeState } from '../helper';\r\nimport { FormatBlock, Button, Textarea, Overview, MarkdownPreview, MultiRow, Spacing, DoubleBr } from '../../../../components';\r\nimport { exampleText, boldAndItalicOptions } from '../../../../constants';\r\nimport parser from './parser';\r\n\r\nconst initialState = {\r\n\twrap: boldAndItalicOptions[0].value,\r\n\ttext: exampleText,\r\n}\r\n\r\nconst [ italicOption, boldOption, italicAndBoldOption ] = boldAndItalicOptions\r\n\r\nconst getButton = (option, state, onClick) =>\r\n\t(<Button title={option.title} name=\"wrap\" value={option.value} active={state.wrap === option.value} onClick={onClick} flex/>)\r\n\r\nconst ExampleComponent = ()=> {\r\n\tconst [state, setState] = useState(initialState)\r\n\r\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\tconst onClick = useCallback(getOnChangeState(setState), [setState])\r\n\r\n\treturn groupRow(\r\n\t\t<>\r\n\t\t\t<FormatBlock paddingVertical>\r\n\t\t\t\t<Spacing>\r\n\t\t\t\t\t{getButton(italicOption, state, onClick)}\r\n\t\t\t\t\t{getButton(boldOption, state, onClick)}\r\n\t\t\t\t\t{getButton(italicAndBoldOption, state, onClick)}\r\n\t\t\t\t</Spacing>\r\n\t\t\t</FormatBlock>\r\n\t\t\t<FormatBlock paddingVertical>\r\n\t\t\t\t<Textarea {...propsFormatter('text', state, setState)}/>\r\n\t\t\t</FormatBlock>\r\n\t\t</>,\r\n\t\tparser(state)\r\n\t)\r\n}\r\n\r\nexport const BoldAndItalic = ({ path }) => {\r\n\treturn <Overview\r\n\t\ttext=\"Bold and Italic\"\r\n\t\tpath={path}\r\n\t\tdescription={<>\r\n\t\t\tTo italicize text, add one asterisk or underscore before and after a word or phrase. To italicize the middle of a word for emphasis, add one asterisks without spaces around the letters.<DoubleBr/>\r\n\t\t\tTo bold text, add two asterisks or underscores before and after a word or phrase. To bold the middle of a word for emphasis, add two asterisks without spaces around the letters.<DoubleBr/>\r\n\t\t\tTo bold and italicize text, add three asterisks or underscores before and after a word or phrase. To bold and italicize the middle of a word for emphasis, add three asterisks without spaces around the letters.<DoubleBr/>\r\n\t\t\tIt is better to use asterisks because they are more multitasking ( but that's just my opinion 😉 ). <DoubleBr/>\r\n\t\t\tExample of use: <br/>\r\n\t\t\t<MultiRow center>\r\n\t\t\t\t<MarkdownPreview>\r\n\t\t\t\t\tItalicize <br/>\r\n\t\t\t\t\t_example_ <br/>\r\n\t\t\t\t\t*example*\r\n\t\t\t\t</MarkdownPreview>\r\n\t\t\t\t<MarkdownPreview>\r\n\t\t\t\t\tItalicize <br/>\r\n\t\t\t\t\t__example__ <br/>\r\n\t\t\t\t\t**example**\r\n\t\t\t\t</MarkdownPreview>\r\n\t\t\t\t<MarkdownPreview>\r\n\t\t\t\t\tBold and Italicize <br/>\r\n\t\t\t\t\t___example___ <br/>\r\n\t\t\t\t\t***example***\r\n\t\t\t\t</MarkdownPreview>\r\n\t\t\t</MultiRow>\r\n\t\t</>}\r\n\t>\r\n\t<ExampleComponent/>\r\n\t</Overview>\r\n}\r\n\r\nBoldAndItalic.displayName = 'BoldAndItalic'\r\n","const parser = ({ text }) => {\r\n\treturn `> ${text}`\r\n};\r\n\r\nexport default parser\r\n","import React, {useState} from 'react'\r\nimport { groupRow, propsFormatter } from '../helper';\r\nimport { FormatBlock, Textarea, Overview } from '../../../../components';\r\nimport { exampleText } from '../../../../constants';\r\nimport parser from './parser';\r\n\r\nconst initialState = { text: exampleText }\r\n\r\nconst ExampleComponent = ()=> {\r\n\tconst [state, setState] = useState(initialState)\r\n\r\n\treturn groupRow(\r\n\t\t<FormatBlock paddingVertical>\r\n\t\t\t<Textarea {...propsFormatter('text', state, setState)}/>\r\n\t\t</FormatBlock>,\r\n\t\tparser(state)\r\n\t)\r\n}\r\n\r\nexport const Blockquotes = ({ path }) => {\r\n\treturn <Overview\r\n\t\ttext=\"Blockquote\"\r\n\t\tpath={path}\r\n\t\tdescription=\"To create a blockquote, add a > in front of a paragraph.\"\r\n\t>\r\n\t<ExampleComponent/>\r\n\t</Overview>\r\n}\r\n\r\nBlockquotes.displayName = 'Blockquotes'\r\n","const parser = ({isOrderedList, rows }) => {\r\n\treturn rows.map(({ text }, index) => `${isOrderedList ? String(++index).concat('.') : '-' } ${text}`).join('\\n')\r\n};\r\n\r\nexport default parser\r\n","import React, {useState, useCallback} from 'react'\r\nimport { groupRow, propsFormatterFlat, safeSplice } from '../helper';\r\nimport { FormatBlock, Textarea, Overview, Switch, Button, Spacing, MultiRow, MarkdownPreview, DoubleBr } from '../../../../components';\r\nimport { exampleText } from '../../../../constants';\r\nimport parser from './parser';\r\n\r\nconst getRowInstance = (text = '') => ({ text, key: `generated-${Math.round(Math.random()*100000000)}` })\r\n\r\nconst initialState = {\r\n\tisOrderedList: false,\r\n\trows: [getRowInstance(exampleText)],\r\n}\r\n\r\nconst ExampleComponent = () => {\r\n\tconst [isOrderedList, setIsOrderedList] = useState(initialState.isOrderedList)\r\n\tconst [rows, setRows] = useState(initialState.rows)\r\n\r\n\tconst onReset = useCallback(() => setRows(initialState.rows), [setRows])\r\n\r\n\tconst onAdd = useCallback(({ target: { value }}) => {\r\n\t\tsetRows(safeSplice(rows, value+1, 0, getRowInstance()))\r\n\t}, [ rows, setRows ])\r\n\r\n\tconst onDelete = useCallback(({ target: { value }}) => {\r\n\t\trows.length > 1\r\n\t\t\t?\tsetRows(safeSplice(rows, value, 1 ))\r\n\t\t\t: onReset()\r\n\t}, [ rows, setRows, onReset ])\r\n\r\n\treturn groupRow(\r\n\t\t<>\r\n\t\t\t<FormatBlock paddingVertical>\r\n\t\t\t\t<Switch {...propsFormatterFlat(isOrderedList, setIsOrderedList)}/>\r\n\t\t\t\t<FormatBlock paddingHorizontal text>\r\n\t\t\t\t\t{ isOrderedList ? 'Enabled ordered list' : 'Disabled ordered list'}\r\n\t\t\t\t</FormatBlock>\r\n\t\t\t</FormatBlock>\r\n\r\n\t\t\t<FormatBlock paddingVertical>\r\n\t\t\t\t\t<Button title=\"Reset\" onClick={onReset}/>\r\n\t\t\t</FormatBlock>\r\n\r\n\t\t\t{rows.map(({text, key, ...rest}, index) => {\r\n\r\n\t\t\t\tconst onChange = ({target: { value }}) =>\r\n\t\t\t\t\tsetRows(safeSplice(rows, index, 1, {text: value, key, ...rest}))\r\n\r\n\t\t\t\treturn <FormatBlock paddingVertical key={ key }>\r\n\t\t\t\t\t<Spacing proportions={ [ '1fr', '24px', '24px' ] }>\r\n\t\t\t\t\t\t<Textarea value={text} onChange={onChange} rows={ 1 }/>\r\n\t\t\t\t\t\t<Button.Icon icon={ Button.icons.ADD } title=\"Add\" value={ index } onClick={ onAdd }/>\r\n\t\t\t\t\t\t<Button.Icon icon={ Button.icons.GARBAGE } title=\"Delete\" value={ index } onClick={ onDelete }/>\r\n\t\t\t\t\t</Spacing>\r\n\t\t\t\t</FormatBlock>\r\n\t\t\t})}\r\n\r\n\t\t</>,\r\n\t\tparser({ isOrderedList, rows }),\r\n\t\ttrue\r\n\t)\r\n}\r\n\r\nexport const List = ({ path }) => {\r\n\treturn <Overview\r\n\t\ttext=\"Lists\"\r\n\t\tpath={path}\r\n\t\tdescription={<>\r\n\t\tTo create an ordered list, add line items with numbers followed by periods. The numbers don’t have to be in numerical order, but the list should start with the number one. <DoubleBr/>\r\n\t\tTo create an unordered list, add dashes (-), asterisks (*), or plus signs (+) in front of line items. Indent one or more items to create a nested list. <DoubleBr/>\r\n\t\tExample of use: <br/>\r\n\t\t\t<MultiRow center>\r\n\t\t\t\t<MarkdownPreview center>\r\n\t\t\t\t\tOrdered list <br/>\r\n\t\t\t\t\t1. Example 1 <br/>\r\n\t\t\t\t\t2. Example 2 <br/>\r\n\t\t\t\t\t3. Example 3\r\n\t\t\t\t</MarkdownPreview>\r\n\t\t\t\t<MarkdownPreview center>\r\n\t\t\t\t\tUnordered list <br/>\r\n\t\t\t\t\t- Example 1 <br/>\r\n\t\t\t\t\t- Example 2 <br/>\r\n\t\t\t\t\t- Example 3\r\n\t\t\t\t</MarkdownPreview>\r\n\t\t\t\t<MarkdownPreview>\r\n\t\t\t\t\tMixed <br/>\r\n\t\t\t\t\t1. Example 1 <br/>\r\n\t\t\t\t\t- Example <br/>\r\n\t\t\t\t\t2. Example 1\r\n\t\t\t\t</MarkdownPreview>\r\n\t\t\t</MultiRow>\r\n\t\t</>}\r\n\t>\r\n\t\t<ExampleComponent/>\r\n\t</Overview>\r\n}\r\n\r\nList.displayName = 'List'\r\n","const parser = ({ text }) => {\r\n\treturn `\\`${text}\\``\r\n};\r\n\r\nexport default parser\r\n","import React, {useState} from 'react'\r\nimport { groupRow, propsFormatter } from '../helper';\r\nimport { FormatBlock, Textarea, Overview } from '../../../../components';\r\nimport { exampleHTML } from '../../../../constants';\r\nimport parser from './parser';\r\n\r\nconst initialState = { text: exampleHTML }\r\n\r\nconst ExampleComponent = ()=> {\r\n\tconst [state, setState] = useState(initialState)\r\n\r\n\treturn groupRow(\r\n\t\t<FormatBlock paddingVertical>\r\n\t\t\t<Textarea {...propsFormatter('text', state, setState)} rows={3}/>\r\n\t\t</FormatBlock>,\r\n\t\tparser(state)\r\n\t)\r\n}\r\n\r\nexport const Code = ({ path }) => {\r\n\treturn <Overview\r\n\t\ttext=\"Code\"\r\n\t\tpath={path}\r\n\t\tdescription=\"To create code blocks, indent every line of the block by at least four spaces or one tab.\"\r\n\t>\r\n\t<ExampleComponent/>\r\n\t</Overview>\r\n}\r\n\r\nCode.displayName = 'Code'\r\n","const parser = ({ text }) => {\r\n\treturn `\\`\\`\\`${text}\\`\\`\\``\r\n};\r\n\r\nexport default parser\r\n","import React, {useState} from 'react'\r\nimport { groupRow, propsFormatter } from '../helper';\r\nimport { FormatBlock, Textarea, Overview } from '../../../../components';\r\nimport { exampleJSON } from '../../../../constants';\r\nimport parser from './parser';\r\n\r\nconst initialState = { text: exampleJSON }\r\n\r\nconst ExampleComponent = ()=> {\r\n\tconst [state, setState] = useState(initialState)\r\n\r\n\treturn groupRow(\r\n\t\t<FormatBlock paddingVertical>\r\n\t\t\t<Textarea {...propsFormatter('text', state, setState)} rows={3}/>\r\n\t\t</FormatBlock>,\r\n\t\tparser(state)\r\n\t)\r\n}\r\n\r\nexport const FencedCodeBlock = ({ path }) => {\r\n\treturn <Overview\r\n\t\ttext=\"Fenced code block\"\r\n\t\tpath={path}\r\n\t\tdescription=\"The basic Markdown syntax allows you to create code blocks by indenting lines by four spaces or one tab.\r\n\t\t If you find that inconvenient, try using fenced code blocks.\r\n\t\t Depending on your Markdown processor or editor, you’ll use three backticks (```) or three tildes (~~~) on the lines before and after the code block.\r\n\t\t\"\r\n\t>\r\n\t<ExampleComponent/>\r\n\t</Overview>\r\n}\r\n\r\nFencedCodeBlock.displayName = 'FencedCodeBlock'\r\n","const parser = (text) => text\r\n\r\nexport default parser\r\n","import React, {useState} from 'react'\r\nimport { groupRow } from '../helper';\r\nimport { FormatBlock, Overview, Button, Spacing } from '../../../../components';\r\nimport { horizontalRules } from '../../../../constants';\r\nimport parser from './parser';\r\n\r\nconst ExampleComponent = ()=> {\r\n\tconst [state, setState] = useState(horizontalRules[0].value)\r\n\r\n\tconst onClick = ({ target: { value }}) => setState(value)\r\n\r\n\treturn groupRow(\r\n\t\t<FormatBlock paddingVertical>\r\n\t\t\t<Spacing proportions={['1fr', '1fr', '1fr']}>\r\n\t\t\t{horizontalRules.map((prop, index) => <Button {...prop} key={`button-${index}`} onClick={onClick} active={state === prop.value}/>)}\r\n\t\t\t</Spacing>\r\n\t\t</FormatBlock>,\r\n\t\tparser(state)\r\n\t)\r\n}\r\n\r\nexport const HorizontalRule = ({ path }) => {\r\n\treturn <Overview\r\n\t\ttext=\"Horizontal rule\"\r\n\t\tpath={ path }\r\n\t\tdescription=\"To create a horizontal rule, use three or more asterisks (***), dashes (---), or underscores (___) on a line by themselves.\"\r\n\t>\r\n\t<ExampleComponent/>\r\n\t</Overview>\r\n}\r\n\r\nHorizontalRule.displayName = 'HorizontalRule'\r\n","const parser = ({ href, description }) => {\r\n\treturn !!description ? `[${description}](${href})` : `<${href}>`\r\n};\r\n\r\nexport default parser\r\n","import React, { useState } from 'react'\r\nimport { groupRow, propsFormatter } from '../helper';\r\nimport { FormatBlock, Textarea, Overview, Spacing, IsValidUrl, MultiRow, MarkdownPreview, DoubleBr } from '../../../../components';\r\nimport parser from './parser';\r\n\r\nconst initialState = { href: window.location.href, description: '' }\r\n\r\nconst ExampleComponent = ()=> {\r\n\tconst [state, setState] = useState(initialState)\r\n\tconst [height, setHeight] = useState('auto')\r\n\r\n\tconst onMouseUp = ({ target }) => {\r\n\t\tconst calcHeight = (target.getBoundingClientRect && target?.getBoundingClientRect()?.height) || height\r\n\t\tsetHeight(calcHeight)\r\n\t}\r\n\r\n\treturn groupRow(\r\n\t\t<>\r\n\t\t<FormatBlock paddingVertical>\r\n\t\t\t<Spacing proportions={['1fr', '1fr', '15px']}>\r\n\t\t\t\t<Textarea\r\n\t\t\t\t\t{...propsFormatter('description', state, setState)}\r\n\t\t\t\t\trows={3}\r\n\t\t\t\t\tonMouseUp={onMouseUp}\r\n\t\t\t\t\tstyle={{ height }}\r\n\t\t\t\t/>\r\n\t\t\t\t<Textarea\r\n\t\t\t\t\t{...propsFormatter('href', state, setState)}\r\n\t\t\t\t\trows={3}\r\n\t\t\t\t\tonMouseUp={onMouseUp}\r\n\t\t\t\t\tstyle={{ height }}\r\n\t\t\t\t/>\r\n\t\t\t\t<IsValidUrl url={state.href}/>\r\n\t\t\t</Spacing>\r\n\t\t</FormatBlock>\r\n\t\t</>,\r\n\t\tparser(state)\r\n\t)\r\n}\r\n\r\nexport const Link = ({ path }) => {\r\n\treturn <Overview\r\n\t\ttext=\"Link\"\r\n\t\tpath={path}\r\n\t\tdescription={<>\r\n\t\t\tYou can optionally add a title for a link.\r\n\t\t  This will appear as a tooltip when the user hovers over the link. To add a title, enclose it in parentheses after the URL. <DoubleBr/>\r\n\t\t  To quickly turn a URL or email address into a link, enclose it in angle brackets. <br/>\r\n\t\t\t<MultiRow center>\r\n\t\t\t\t<MarkdownPreview>\r\n\t\t\t\t\tLink with description <br/>\r\n\t\t\t\t\t[link](http://example.com)\r\n\t\t\t\t</MarkdownPreview>\r\n\t\t\t\t<MarkdownPreview>\r\n\t\t\t\t\tOnly link <br/>\r\n\t\t\t\t\t{'<'}http://example.com{'>'}\r\n\t\t\t\t</MarkdownPreview>\r\n\t\t\t</MultiRow>\r\n\t\t </>}\r\n\t>\r\n\t<ExampleComponent/>\r\n\t</Overview>\r\n}\r\n\r\nLink.displayName = 'Link'\r\n","const parser = ({ href, alt }) => {\r\n\treturn `![${alt}](${href})`\r\n};\r\n\r\nexport default parser\r\n","import React, { useState } from 'react'\r\nimport { groupRow, propsFormatter } from '../helper';\r\nimport { exampleText } from '../../../../constants';\r\nimport { FormatBlock, Textarea, Overview, Spacing } from '../../../../components';\r\nimport parser from './parser';\r\n\r\nconst initialState = { href: window.location.href, alt: exampleText }\r\n\r\nconst ExampleComponent = ()=> {\r\n\tconst [state, setState] = useState(initialState)\r\n\tconst [height, setHeight] = useState('auto')\r\n\r\n\tconst onMouseUp = ({ target }) => {\r\n\t\tconst calcHeight = (target.getBoundingClientRect && target?.getBoundingClientRect()?.height) || height\r\n\t\tsetHeight(calcHeight)\r\n\t}\r\n\r\n\treturn groupRow(\r\n\t\t<>\r\n\t\t<FormatBlock paddingVertical>\r\n\t\t\t<Spacing>\r\n\t\t\t\t<Textarea\r\n\t\t\t\t\t{...propsFormatter('alt', state, setState)}\r\n\t\t\t\t\trows={2}\r\n\t\t\t\t\tonMouseUp={onMouseUp}\r\n\t\t\t\t\tstyle={{ height }}\r\n\t\t\t\t/>\r\n\t\t\t\t<Textarea\r\n\t\t\t\t\t{...propsFormatter('href', state, setState)}\r\n\t\t\t\t\trows={2}\r\n\t\t\t\t\tonMouseUp={onMouseUp}\r\n\t\t\t\t\tstyle={{ height }}\r\n\t\t\t\t/>\r\n\t\t\t</Spacing>\r\n\t\t</FormatBlock>\r\n\t\t</>,\r\n\t\tparser(state)\r\n\t)\r\n}\r\n\r\nexport const Image = ({ path }) => {\r\n\treturn <Overview\r\n\t\ttext=\"Image\"\r\n\t\tpath={path}\r\n\t\tdescription=\"To add a link to an image, enclose the Markdown for the image in brackets, and then add the link in parentheses.\"\r\n\t>\r\n\t<ExampleComponent/>\r\n\t</Overview>\r\n}\r\n\r\nImage.displayName = 'Image'\r\n","const parser = ({ text }) => {\r\n\treturn `~~${text}~~`\r\n};\r\n\r\nexport default parser\r\n","import React, {useState} from 'react'\r\nimport { groupRow, propsFormatter } from '../helper';\r\nimport { FormatBlock, Textarea, Overview, Strike } from '../../../../components';\r\nimport { exampleText } from '../../../../constants';\r\nimport parser from './parser';\r\n\r\nconst initialState = { text: exampleText }\r\n\r\nconst ExampleComponent = ()=> {\r\n\tconst [state, setState] = useState(initialState)\r\n\r\n\treturn groupRow(\r\n\t\t<FormatBlock paddingVertical>\r\n\t\t\t<Textarea {...propsFormatter('text', state, setState)} rows={3}/>\r\n\t\t</FormatBlock>,\r\n\t\tparser(state)\r\n\t)\r\n}\r\n\r\nexport const Strikethrough = ({ path }) => {\r\n\treturn <Overview\r\n\t\ttext=\"Strikethrough\"\r\n\t\tpath={path}\r\n\t\tdescription={<>\r\n\t\t\tYou can strikethrough words by putting a horizontal line through the center of them.\r\n\t\t\tThe result looks <Strike>like this</Strike>.\r\n\t\t</>}\r\n\t>\r\n\t<ExampleComponent/>\r\n\t</Overview>\r\n}\r\n\r\nStrikethrough.displayName = 'Strikethrough'\r\n","const parser = ({rows }) => {\r\n\treturn rows.map(({ text, checked }) => `- [${checked ? 'x' : ' '}] ${text}`).join('\\n')\r\n};\r\n\r\nexport default parser\r\n","import React, {useState, useCallback} from 'react'\r\nimport { groupRow, safeSplice } from '../helper';\r\nimport { FormatBlock, Textarea, Overview, Button, Spacing, MarkdownPreview, MultiRow, Checkbox } from '../../../../components';\r\nimport { exampleText } from '../../../../constants';\r\nimport parser from './parser';\r\n\r\nconst getRowInstance = (text = '') => ({ text, checked: false, key: `generated-list-${Math.round(Math.random()*100000000)}` })\r\n\r\nconst initialState = {\r\n\tisOrderedList: false,\r\n\trows: [getRowInstance(exampleText)],\r\n}\r\n\r\nconst ExampleComponent = () => {\r\n\tconst [rows, setRows] = useState(initialState.rows)\r\n\r\n\tconst onReset = useCallback(() => setRows(initialState.rows), [setRows])\r\n\r\n\tconst onAdd = useCallback(({ target: { value }}) => {\r\n\t\tsetRows(safeSplice(rows, value+1, 0, getRowInstance()))\r\n\t}, [ rows, setRows ])\r\n\r\n\tconst onDelete = useCallback(({ target: { value }}) => {\r\n\t\trows.length > 1\r\n\t\t\t?\tsetRows(safeSplice(rows, value, 1 ))\r\n\t\t\t: onReset()\r\n\t}, [ rows, setRows, onReset ])\r\n\r\n\treturn groupRow(\r\n\t\t<>\r\n\r\n\t\t\t<FormatBlock paddingVertical>\r\n\t\t\t\t<Button title=\"Reset\" onClick={onReset}/>\r\n\t\t\t</FormatBlock>\r\n\r\n\t\t\t{rows.map(({text, checked, key, ...rest}, index) => {\r\n\r\n\t\t\t\tconst onChange = ({target: { name, value }}) =>\r\n\t\t\t\t\tsetRows(safeSplice(rows, index, 1, {text, key, ...rest, [name]: value}))\r\n\r\n\t\t\t\treturn <FormatBlock paddingVertical key={ key }>\r\n\t\t\t\t\t<Spacing proportions={ [ '24px', '1fr', '24px', '24px' ] }>\r\n\t\t\t\t\t\t<Checkbox name={'checked'} title={checked ? 'Checked': 'Not checked'} value={checked} onClick={onChange} rows={ 1 }/>\r\n\t\t\t\t\t\t<Textarea name={'text'} value={text} onChange={onChange} rows={ 1 }/>\r\n\t\t\t\t\t\t<Button.Icon icon={ Button.icons.ADD } title=\"Add\" value={ index } onClick={ onAdd }/>\r\n\t\t\t\t\t\t<Button.Icon icon={ Button.icons.GARBAGE } title=\"Delete\" value={ index } onClick={ onDelete }/>\r\n\t\t\t\t\t</Spacing>\r\n\t\t\t\t</FormatBlock>\r\n\t\t\t})}\r\n\r\n\t\t</>,\r\n\t\tparser({ rows }),\r\n\t\ttrue\r\n\t)\r\n}\r\n\r\nexport const TaskList = ({ path }) => {\r\n\treturn <Overview\r\n\t\ttext=\"Lists\"\r\n\t\tpath={path}\r\n\t\tdescription={<>\r\n\t\t\tTask lists allow you to create a list of items with checkboxes. In Markdown applications that support task lists, checkboxes will be displayed next to the content.\r\n\t\t\tTo create a task list, add dashes (-) and brackets with a space ([ ]) in front of task list items.\r\n\t\t\tTo select a checkbox, add an x in between the brackets ([x]). <br/>\r\n\t\t\t<MultiRow center>\r\n\t\t\t\t<MarkdownPreview center>\r\n\t\t\t\t\tTask list <br/>\r\n\t\t\t\t\t- [x] Checked <br/>\r\n\t\t\t\t\t- [ ] Uncheked <br/>\r\n\t\t\t\t</MarkdownPreview>\r\n\t\t\t</MultiRow>\r\n\t\t</>}\r\n\t>\r\n\t\t<ExampleComponent/>\r\n\t</Overview>\r\n}\r\n\r\nTaskList.displayName = 'TaskList'\r\n","const parser = ({ rows, term }) => {\r\n\tconst rowsList = rows.map(({ text }) => `: ${text}`).join('\\n')\r\n\treturn `${term} \\n ${rowsList}`\r\n};\r\n\r\nexport default parser\r\n","import React, {useState, useCallback} from 'react'\r\nimport { groupRow, propsFormatter, safeSplice } from '../helper';\r\nimport { FormatBlock, Textarea, Button, Spacing, MarkdownPreview, MultiRow, Overview } from '../../../../components';\r\nimport { exampleText } from '../../../../constants';\r\nimport parser from './parser';\r\n\r\nconst getRowInstance = (text = '') => ({ text, key: `generated-list-d-${Math.round(Math.random()*100000000)}` })\r\n\r\nconst initialState = {\r\n\tterm: 'Term',\r\n\trows: [getRowInstance(exampleText)],\r\n}\r\n\r\nconst ExampleComponent = () => {\r\n\tconst [state, setState] = useState(initialState)\r\n\r\n\tconst onReset = useCallback(() => setState(initialState), [setState])\r\n\r\n\tconst onAdd = useCallback(({ target: { value }}) => {\r\n\t\tsetState({ ...state, rows: safeSplice(state.rows, value+1, 0, getRowInstance())})\r\n\t}, [ state, setState ])\r\n\r\n\tconst onDelete = useCallback(({ target: { value }}) => {\r\n\t\tstate.rows.length > 1\r\n\t\t\t?\tsetState({ ...state, rows: safeSplice(state.rows, value, 1 )})\r\n\t\t\t: setState({ ...state, rows: initialState.rows })\r\n\t}, [ state, setState ])\r\n\r\n\treturn groupRow(\r\n\t\t<>\r\n\r\n\t\t\t<FormatBlock paddingVertical>\r\n\t\t\t\t<Button title=\"Reset\" onClick={onReset}/>\r\n\t\t\t</FormatBlock>\r\n\r\n\t\t\t<Textarea name={'text'} {...propsFormatter('term', state, setState)} rows={ 1 }/>\r\n\r\n\t\t\t{state.rows.map(({text, checked, key, ...rest}, index) => {\r\n\r\n\t\t\t\tconst onChange = ({target: { name, value }}) =>\r\n\t\t\t\t\tsetState({ ...state, rows: safeSplice(state.rows, index, 1, {text, key, ...rest, [name]: value})})\r\n\r\n\t\t\t\treturn <FormatBlock paddingVertical key={ key }>\r\n\t\t\t\t\t<Spacing proportions={ [ '1fr', '24px', '24px' ] }>\r\n\t\t\t\t\t\t<Textarea name={'text'} value={text} onChange={onChange} rows={ 1 }/>\r\n\t\t\t\t\t\t<Button.Icon icon={ Button.icons.ADD } title=\"Add\" value={ index } onClick={ onAdd }/>\r\n\t\t\t\t\t\t<Button.Icon icon={ Button.icons.GARBAGE } title=\"Delete\" value={ index } onClick={ onDelete }/>\r\n\t\t\t\t\t</Spacing>\r\n\t\t\t\t</FormatBlock>\r\n\t\t\t})}\r\n\r\n\t\t</>,\r\n\t\tparser(state),\r\n\t\ttrue\r\n\t)\r\n}\r\n\r\nexport const DefinitionList = ({ path }) => {\r\n\treturn <Overview\r\n\t\ttext=\"Definition List\"\r\n\t\tpath={path}\r\n\t\tdescription={<>\r\n\t\t\tSome Markdown processors allow you to create definition lists of terms and their corresponding definitions.\r\n\t\t\tTo create a definition list, type the term on the first line. On the next line, type a colon followed by a space and the definition. <br/>\r\n\t\t\t<MultiRow center>\r\n\t\t\t\t<MarkdownPreview center>\r\n\t\t\t\t\tterm <br/>\r\n\t\t\t\t\t: definition\r\n\t\t\t\t</MarkdownPreview>\r\n\t\t\t</MultiRow>\r\n\t\t</>}\r\n\t>\r\n\t\t<ExampleComponent/>\r\n\t</Overview>\r\n}\r\n\r\nDefinitionList.displayName = 'DefinitionList'\r\n","import React from 'react'\r\nimport { Overview, MultiRow, MarkdownPreview, DoubleBr } from '../../../../components';\r\n\r\nexport const Footnote\t= ({ path }) => {\r\n\treturn <Overview\r\n\t\ttext=\"Footnote\"\r\n\t\tpath={path}\r\n\t\tdescription={<>\r\n\t\t\tFootnotes allow you to add notes and references without cluttering the body of the document.\r\n\t\t\tWhen you create a footnote, a superscript number with a link appears where you added the footnote reference.\r\n\t\t\tReaders can click the link to jump to the content of the footnote at the bottom of the page.\r\n\t\t\t<DoubleBr/>\r\n\t\t\tTo create a footnote reference, add a caret and an identifier inside brackets ([^1]).\r\n\t\t\tIdentifiers can be numbers or words, but they can’t contain spaces or tabs.\r\n\t\t\tIdentifiers only correlate the footnote reference with the footnote itself — in the output, footnotes are numbered sequentially.\r\n\t\t\t<DoubleBr/>\r\n\t\t\tAdd the footnote using another caret and number inside brackets with a colon and text ([^1]: My footnote.).\r\n\t\t\tYou don’t have to put footnotes at the end of the document.\r\n\t\t\tYou can put them anywhere except inside other elements like lists, block quotes, and tables.\r\n\t\t\t<br/>\r\n\t\t\t<MultiRow center>\r\n\t\t\t\t<MarkdownPreview center>\r\n\t\t\t\t\tHere's a sentence with a footnote. [^1] <br/>\r\n\t\t\t\t\t<br/>\r\n\t\t\t\t\t[^1]: This is the footnote.\r\n\t\t\t\t</MarkdownPreview>\r\n\t\t\t</MultiRow>\r\n\t\t</>}\r\n\t/>\r\n}\r\n\r\nFootnote.displayName = 'Footnote'\r\n","import React from 'react'\r\nimport { Overview, MultiRow, MarkdownPreview, DoubleBr } from '../../../../components';\r\n\r\nexport const Tables\t= ({ path }) => {\r\n\treturn <Overview\r\n\t\ttext=\"Tables\"\r\n\t\tpath={path}\r\n\t\tdescription={<>\r\n\t\t\tTo add a table, use three or more hyphens (---) to create each column’s header, and use pipes (|) to separate each column.\r\n\t\t\tYou can optionally add pipes on either end of the table. <DoubleBr/>\r\n\t\t\tYou can align text in the columns to the left, right, or center by adding a colon (:) to the left, right, or on both side of the hyphens within the header row. <DoubleBr/>\r\n\t\t\tYou can use <a href=\"https://www.tablesgenerator.com/\" >\"Markdown Tables Generator\"</a> to generate custom table. <br/>\r\n\t\t\t<MultiRow center>\r\n\t\t\t\t<MarkdownPreview center>\r\n\t\t\t\t\t|  Align  | Start   |  Center  |     End | <br/>\r\n\t\t\t\t\t|   ---   | :---    |  :----:  |    ---: | <br/>\r\n\t\t\t\t\t|  Text   | Text    |   Text   |    Text | <br/>\r\n\t\t\t\t\t|  Text   | Text    |   Text   |    Text |\r\n\t\t\t\t</MarkdownPreview>\r\n\t\t\t</MultiRow>\r\n\t\t</>}\r\n\t/>\r\n}\r\n\r\nTables.displayName = 'Tables'\r\n","import React from 'react'\r\nimport { H1 } from './SyntaxTypes/H1'\r\nimport { BoldAndItalic } from './SyntaxTypes/BoldAndItalic'\r\nimport { Blockquotes } from './SyntaxTypes/Blockquotes';\r\nimport { List } from './SyntaxTypes/List';\r\nimport { Code } from './SyntaxTypes/Code';\r\nimport { FencedCodeBlock } from './SyntaxTypes/FencedCodeBlock';\r\nimport { HorizontalRule } from './SyntaxTypes/HorizontalRule';\r\nimport { Link } from './SyntaxTypes/Link';\r\nimport { Image } from './SyntaxTypes/Image';\r\nimport { Strikethrough } from './SyntaxTypes/Strikethrough';\r\nimport { TaskList } from './SyntaxTypes/TaskList';\r\nimport { DefinitionList } from './SyntaxTypes/DefinitionList';\r\nimport { Footnote } from './SyntaxTypes/Footnote';\r\nimport { Tables } from './SyntaxTypes/Table';\r\nimport { routes } from '../../constants';\r\n\r\nexport const Types = [\r\n\t{Component: H1,              path: routes.h1,              name: 'H1' },\r\n\t{Component: BoldAndItalic,   path: routes.boldAndItalic,   name: 'Bold and Italic' },\r\n\t{Component: Blockquotes,     path: routes.blockquotes,     name: 'Blockquotes' },\r\n\t{Component: List,            path: routes.list,            name: 'List' },\r\n\t{Component: Code,            path: routes.code,            name: 'Code' },\r\n\t{Component: FencedCodeBlock, path: routes.fencedCodeBlock, name: 'Fenced code block' },\r\n\t{Component: HorizontalRule,  path: routes.horizontalRule,  name: 'Horizontal rule' },\r\n\t{Component: Link,            path: routes.link,            name: 'Link' },\r\n\t{Component: Image,           path: routes.image,           name: 'Image' },\r\n\t{Component: Strikethrough,   path: routes.strikethrough,   name: 'Strikethrough' },\r\n\t{Component: TaskList,        path: routes.taskList,        name: 'Task list' },\r\n\t{Component: DefinitionList,  path: routes.definitionList,  name: 'Definition list' },\r\n\t{Component: Footnote,        path: routes.footnote,        name: 'Footnote' },\r\n\t{Component: Tables,          path: routes.tables,          name: 'Tables' },\r\n]\r\n\r\nexport const Main = () => {\r\n\treturn Types.map(({ Component, path }) => <Component key={path} path={path}/>)\r\n}\r\n\r\nMain.displayName = 'Main'\r\n","import React, { useState } from 'react'\r\nimport './style.css'\r\nimport icon from '../../asserts/markdown.ico'\r\nimport { Button } from '../../components/Button';\r\nimport { routes } from '../../constants';\r\nimport { Types } from '../../pages/Main';\r\nimport classNames from 'classnames';\r\n\r\nexport const HeadContent = ({ location: { pathname }, history }) => {\r\n\tconst [ collapsed, setCollapsed ] = useState(false)\r\n\tconst locationName = Types.find(({ path }) => path === pathname)?.name\r\n\r\n\tconst onClickHome = () => history.push(routes.parts)\r\n\tconst onClickScroll = () => window.scroll({top: 0, left: 0, behavior: 'smooth' })\r\n\tconst onToggleCollapse = () => setCollapsed((prev) => !prev)\r\n\r\n\t return <>\r\n\t\t<nav className=\"navigation\">\r\n\t\t\t<div className=\"left-side\" onClick={onClickScroll}>\r\n\t\t\t\t<img src={ icon } alt=\"Sorry\" className=\"icon\"/>\r\n\t\t\t\t<h1 className=\"title\">\r\n\t\t\t\t\tMarkdown Formatter\r\n\t\t\t\t</h1>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"right-side\">\r\n\t\t\t\t<h2 className={\"right-side__location\"}>{locationName}</h2>\r\n\t\t\t\t<Button.Icon icon={ Button.icons.HOME } color={ Button.colors.white } onClick={onClickHome} title=\"Go home\"/>\r\n\t\t\t</div>\r\n\t\t</nav>\r\n\t\t<header className={classNames(\"header\", { collapsed })} onClick={onToggleCollapse}>\r\n\t\t\t<p className=\"foreword\">\r\n\t\t\t\t<h1>\r\n\t\t\t\t\tMarkdown syntax with live examples\r\n\t\t\t\t</h1>\r\n\t\t\t\tMade in custom design by Barhylevych Oleksandr\r\n\t\t\t</p>\r\n\t\t</header>\r\n\t</>\r\n}\r\n\r\nHeadContent.displayName = 'HeadContent'\r\n","export const ENTER_TEXT = 'Enter text'\r\n","import * as en from './en'\r\n\r\nexport default en\r\n","import React from 'react'\r\nimport i18n from '../../i18n'\r\nimport { pt } from '../../lib'\r\nimport { always } from '../../utils'\r\nimport './style.css'\r\n\r\nexport const Textarea = ({\r\n\tplaceholder = i18n.ENTER_TEXT,\r\n\tstyle = always.frozenObject,\r\n\tvalue,\r\n\tname,\r\n\tonChange,\r\n\trows = 6,\r\n\tonMouseUp = always.frozenFunc,\r\n\tonMouseDown = always.frozenFunc\r\n}) => {\r\n\treturn <textarea\r\n\t\tonMouseUp={onMouseUp}\r\n\t\tonMouseDown={onMouseDown}\r\n\t\tstyle={style}\r\n\t\trows={rows}\r\n\t\tvalue={value}\r\n\t\tname={name}\r\n\t\tonChange={onChange}\r\n\t\tplaceholder={placeholder}\r\n\t/>\r\n}\r\n\r\nTextarea.displayName = 'Textarea'\r\nTextarea.propTypes = {\r\n\tplaceholder: pt.stringOrNumber,\r\n\tvalue: pt.stringOrNumber,\r\n\tname: pt.stringOrNumber,\r\n\tonChange: pt.func,\r\n\tonMouseUp: pt.func,\r\n\tonMouseDown: pt.func,\r\n\tstyle: pt.object,\r\n\trows: pt.stringOrNumber,\r\n}\r\n","import React, { useState } from 'react'\r\nimport './style.css'\r\nimport { isString } from '../../utils';\r\nimport { pt } from '../../lib'\r\nimport classNames from 'classnames';\r\nimport MarkdownIt from 'markdown-it';\r\nimport { Button } from '../Button';\r\n\r\nconst md = new MarkdownIt()\r\n\r\nexport const MarkdownPreview = ({\r\n\tenableBr,\r\n\tcenter,\r\n  children,\r\n}) => {\r\n\tconst [ preview, setPreview ] = useState(false)\r\n\r\n\tconst preparedData = Array.isArray(children)\r\n\t\t? children.filter((i) => isString(i)).join(' ')\r\n\t\t: isString(children) ? children : ''\r\n\r\n\tconst previewData = preview ? md.render(preparedData) : ''\r\n\r\n\tconst onPreview = () => setPreview((prev) => !prev)\r\n\tconst onCopy = async () => {\r\n\t\tawait navigator?.clipboard?.writeText(preview ? previewData : preparedData)\r\n\t}\r\n\r\n\treturn <div className=\"code__wrap\">\r\n\t\t<code className={classNames(\"code\", {'code__center--container': center})}>\r\n\t\t\t<div className=\"menu\">\r\n\t\t\t\t<Button title=\"HTML\" onClick={onPreview} active={preview}/>\r\n\t\t\t\t<Button title=\"Copy\" onClick={onCopy}/>\r\n\t\t\t</div>\r\n\t\t\t<div className={classNames({'code__center--children': center})}>\r\n\t\t\t{preview\r\n\t\t\t\t? previewData\r\n\t\t\t\t: (isString(children) && enableBr) ? children.split('\\n').map((item) => <> {item} <br/> </>) : children\r\n\t\t\t}\r\n\t\t\t</div>\r\n\t\t</code>\r\n\t</div>\r\n}\r\n\r\nMarkdownPreview.propTypes = {\r\n\t...pt.ANY_CHILDREN,\r\n\tenableBr: pt.bool\r\n}\r\n","import React, { useMemo } from 'react'\r\nimport { pt } from '../../lib'\r\nimport './style.css'\r\n\r\nexport const FormatBlock = ({\r\n\tpaddingHorizontal,\r\n\tpaddingVertical,\r\n\tmarginHorizontal,\r\n\tmarginVertical,\r\n\tcolumn,\r\n\ttext,\r\n\tstyle,\r\n\tchildren\r\n} ) => {\r\n\r\n\tconst classList = useMemo(() => {\r\n\t\tconst list = ['format-block']\r\n\t\tpaddingHorizontal && list.push('padding-horizontal')\r\n\t\tpaddingVertical && list.push('padding-vertical')\r\n\t\tmarginHorizontal && list.push('margin-horizontal')\r\n\t\tmarginVertical && list.push('margin-vertical')\r\n\t\tcolumn && list.push('column')\r\n\t\ttext && list.push('text')\r\n\t\treturn list\r\n\t}, \t[\r\n\t\tpaddingHorizontal,\r\n\t\tpaddingVertical,\r\n\t\tmarginVertical,\r\n\t\tmarginHorizontal,\r\n\t\ttext,\r\n\t\tcolumn\r\n\t])\r\n\r\n\treturn <span className={classList.join(' ')} style={style}>{children}</span>\r\n}\r\n\r\nFormatBlock.propTypes = {\r\n\tpaddingHorizontal: pt.bool,\r\n\tpaddingVertical: pt.bool,\r\n\tmarginHorizontal: pt.bool,\r\n\tmarginVertical: pt.bool,\r\n\tcolumn: pt.bool,\r\n\ttext: pt.bool,\r\n\tstyle: pt.object,\r\n\tchildren: pt.any,\r\n}\r\n","import React from 'react'\r\nimport { pt } from '../../lib'\r\nimport './style.css'\r\nimport { useHistory } from 'react-router';\r\n\r\nexport const Overview = ({\r\n\ttext,\r\n\tpath,\r\n\tdescription,\r\n\tchildren,\r\n}) => {\r\n\r\n\tconst history = useHistory()\r\n\tconst onClick = () => history.push(path)\r\n\r\n\treturn <section className=\"overview__section\">\r\n\t\t<article className=\"overview__article\">\r\n\t\t\t<h1 className=\"overview__header\" onClick={onClick}>{text}</h1>\r\n\t\t\t<p className=\"overview__description\">{description}</p>\r\n\t\t</article>\r\n\t\t{children}\r\n\t</section>\r\n}\r\n\r\nOverview.propTypes = {\r\n\ttext: pt.any,\r\n\tdescription: pt.any,\r\n\tchildren: pt.any,\r\n\tpath: pt.any,\r\n}\r\n","import React, { useCallback } from 'react'\r\nimport { pt } from '../../lib'\r\nimport './style.css'\r\nimport classNames from 'classnames';\r\n\r\nexport const Switch = ({\r\n\tname,\r\n\tvalue,\r\n\tonChange,\r\n\r\n}) => {\r\n\tconst onChangeHandler = useCallback(() => {\r\n\t\tonChange({ target: { name, value: !value }})\r\n\t}, [onChange, name, value])\r\n\r\n\treturn <div className={classNames(\"switch\", {'on-mode': value})} onClick={onChangeHandler}>\r\n\t\t<div className={\"switch__ball\"}/>\r\n\t</div>\r\n}\r\n\r\nSwitch.displayName = 'Switch'\r\nSwitch.propTypes = {\r\n\tname: pt.stringOrNumber,\r\n\tvalue: pt.bool,\r\n\tonChange: pt.func\r\n}\r\n","import React, {memo} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { always } from '../../utils'\r\nimport './style.css'\r\n\r\nconst getProportions = (proportions) => proportions?.length\r\n\t? { gridTemplateColumns: proportions.join(' '), width: '100%' }\r\n\t: always.frozenObject\r\n\r\nexport const Spacing = memo(({ children, proportions}) => (<div\r\n\tclassName=\"spacing\"\r\n\tstyle={getProportions(proportions)}>\r\n\t{children}\r\n</div>))\r\n\r\nSpacing.displayName = 'Spacing'\r\nSpacing.propTypes = { children: PropTypes.any, proportions: PropTypes.array }\r\n","import React, { memo } from 'react'\r\nimport { pt }from '../../lib'\r\nimport './style.css'\r\nimport classNames from 'classnames';\r\nimport { Button } from '../Button';\r\n\r\nconst isValid = (url) => {\r\n\ttry {\r\n\t\treturn Boolean(new URL(url))\r\n\t} catch (e) {\r\n\t\treturn false\r\n\t}\r\n}\r\n\r\nexport const IsValidUrl = memo(({ url }) => {\r\n\tconst validStatus = isValid(url)\r\n\tconst title = validStatus ? 'Url valid' : 'Url invalid'\r\n\r\n\treturn <div className={classNames(\"is-valid-url\", { 'is-valid-url__fulfilled': validStatus })} title={title}>\r\n\t\t{validStatus\r\n\t\t\t?\t<Button.Icon icon={Button.icons.FULFILLED}/>\r\n\t\t\t: <Button.Icon icon={Button.icons.REJECT}/>\r\n\t\t}\r\n\t</div>\r\n})\r\n\r\nIsValidUrl.displayName = 'IsValidUrl'\r\nIsValidUrl.propTypes = {\r\n\turl: pt.any\r\n}\r\n","import React, { memo } from 'react'\r\nimport { pt } from '../../lib'\r\nimport './style.css'\r\n\r\nexport const Checkbox = memo(({\r\n\ttitle,\r\n\tvalue,\r\n\tonClick,\r\n\tname,\r\n}) => {\r\n\r\n\tconst onClickHandler = () => onClick({ target: { name, value: !value }})\r\n\r\n\treturn <div className=\"checkbox__wrap\" title={title}>\r\n\t\t\t<input type=\"checkbox\" name={name} checked={value} onClick={onClickHandler}/>\r\n\t</div>\r\n})\r\n\r\nCheckbox.displayName = 'Checkbox'\r\nCheckbox.propTypes = { ...pt.STATIC_COMPONENT_PROPS }\r\n","import React from 'react'\r\nimport './style.css'\r\nimport { Button } from '../Button';\r\n\r\nexport const Footer = () => {\r\n\treturn <footer className=\"footer\">\r\n\t\t<div className=\"left-side\">\r\n\t\t\tMade design by O. Barhylevych\r\n\t\t</div>\r\n\t\t<div className=\"right-side\">\r\n\t\t\t<a href={process.env.REACT_APP_GITHUB} target=\"_blank\" rel=\"noreferrer\">\r\n\t\t\t\t<Button.Icon icon={Button.icons.GITHUB}/>\r\n\t\t\t</a>\r\n\t\t\t<a href={`mailto:${process.env.REACT_APP_MAIL}`} target=\"_blank\" rel=\"noreferrer\">\r\n\t\t\t\t<Button.Icon icon={Button.icons.GMAIL}/>\r\n\t\t\t</a>\r\n\t\t</div>\r\n\t</footer>\r\n}\r\n\r\nFooter.displayName = 'Footer'\r\n","import React from 'react'\r\nimport { pt }from '../lib'\r\nimport { Selector } from './Selector';\r\nimport { MultiRow } from './MultiRow';\r\nimport { HeadContent } from './HeadContent';\r\nimport { Textarea } from './Textarea';\r\nimport { MarkdownPreview } from './MarkdownPreview';\r\nimport { FormatBlock } from './FormatBlock';\r\nimport { Overview } from './Overview';\r\nimport { Button } from './Button';\r\nimport { Switch } from './Switch';\r\nimport { Spacing } from './Spacing';\r\nimport { IsValidUrl } from './IsValidUrl';\r\nimport { Checkbox } from './Checkbox';\r\nimport { Footer } from './Footer';\r\n\r\nimport './style.css'\r\n\r\nconst Strike = ({ children }) => (<div className=\"strike\">{children}</div>)\r\nStrike.propTypes = pt.ANY_CHILDREN\r\n\r\nconst DoubleBr = () => (<><br/><br/></>)\r\n\r\nexport {\r\n\tSelector,\r\n\tMultiRow,\r\n\tHeadContent,\r\n\tTextarea,\r\n\tMarkdownPreview,\r\n\tFormatBlock,\r\n\tOverview,\r\n\tButton,\r\n\tSwitch,\r\n\tSpacing,\r\n\tIsValidUrl,\r\n\tStrike,\r\n\tCheckbox,\r\n\tDoubleBr,\r\n\tFooter,\r\n}\r\n","import React from 'react'\r\nimport { HeadContent, Footer } from './components'\r\nimport { Route, Redirect, Switch, withRouter } from 'react-router';\r\nimport { Main, Types } from './pages/Main';\r\nimport { routes } from './constants';\r\n\r\nconst Head = withRouter(HeadContent)\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Head/>\r\n      <main>\r\n        <Switch>\r\n          <Route path={routes.parts} component={Main}/>\r\n          {Types.map(({ Component, path }) => <Route path={path} component={Component} key={path}/> )}\r\n          <Redirect to={routes.parts} />\r\n        </Switch>\r\n      </main>\r\n      <Footer/>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { HashRouter } from 'react-router-dom'\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <App/>\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}